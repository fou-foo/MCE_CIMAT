y
dim(muestra)[2]
View(muestra)
muestra <- parques[, 2:3]
View(muestra)
info <- apply(muestra, 2, sum)
n <- dim(muestra)[1]
lambda
lambda <- c(1.2,3.5)
y <- apply(muestra[, 2:3], 1, function(x){
for(i in 1:dim(muestra[])[2])
{
x[i] <- ((x[i]**lambda[i]-1)/lambda[i])
return(x)
}
})
y <- apply(muestra, 1, function(x){
for(i in 1:dim(muestra)[2])
{
x[i] <- ((x[i]**lambda[i]-1)/lambda[i])
return(x)
}
})
dim(muestra)[2]
y
y <- t(y)
cov(y)
det(cov(y))
log( det( cov(y) ) )
l <- -(n/2)*log( det( cov(y) ) )
1:5 ** 1:5
p <- dim(muestra)[2]
multinormal.likelihood <- function(muestra,lambda)
{
info <- apply(muestra, 2, sum)
n <- dim(muestra)[1]
p <- dim(muestra)[2]
function(lambda)
{
y <- apply(muestra, 1, function(x){
for(i in 1:p)
{
x[i] <- ((x[i]**lambda[i]-1)/lambda[i])
return(x)
}
})
y <- t(y)
l <- -(n/2)*log( det( cov(y) ) )
for (i in 1:p)
{
l <- l + (lambda[i]-1)*info[i]
}
return(l)
}
}
Multinormal.tamano_ <- Multinormal.likelihood(parques[,2:3]) #inicializamos la funcion
multinormal.likelihood <- function(muestra,lambda)
{
info <- apply(muestra, 2, sum)
n <- dim(muestra)[1]
p <- dim(muestra)[2]
function(lambda)
{
y <- apply(muestra, 1, function(x){
for(i in 1:p)
{
x[i] <- ((x[i]**lambda[i]-1)/lambda[i])
return(x)
}
})
y <- t(y)
l <- -(n/2)*log( det( cov(y) ) )
for (i in 1:p)
{
l <- l + (lambda[i]-1)*info[i]
}
return(l)
}
}
Multinormal.tamano_ <- multinormal.likelihood(parques[,2:3]) #inicializamos la funcion
Multinormal.tamano_
?nlm
nlm( f = function(lambda){-1*Multinormal.tamano_(lambda)}, c(.1, .1) )
nlm( f = function(lambda){-1*Multinormal.tamano_(lambda)}, c(.19, -.3) )
warnings()
a <- nlm( f = function(lambda){-1*Multinormal.tamano_(lambda)}, c(.19, -.3) )
a
a <- optim( fn = Multinormal.tamano_, par = c(.19, -.3), control=list(fnscale=-1))
a
a <- optim( fn = Multinormal.tamano_, par = c(.19, -.3))
multinormal.likelihood <- function(muestra,lambda)
{
info <- apply(muestra, 2, sum)
n <- dim(muestra)[1]
p <- dim(muestra)[2]
function(lambda)
{
y <- apply(muestra, 1, function(x){
for(i in 1:p)
{
x[i] <- ((x[i]**lambda[i]-1)/lambda[i])
return(x)
}
})
y <- t(y)
l <- -(n/2)*log( det( cov(y) ) )
for (i in 1:p)
{
l <- l + (lambda[i]-1)*info[i]
}
return(-l)
}
}
Multinormal.tamano_ <- multinormal.likelihood(parques[,2:3]) #inicializamos la funcion
a <- optim( fn = Multinormal.tamano_, par = c(.19, -.3))
a
a <- optim( fn = Multinormal.tamano_, par = c(.19, -.3), method = "BFGS")
multinormal.likelihood <- function(muestra,lambda)
{
info <- apply(muestra, 2, sum)
n <- dim(muestra)[1]
p <- dim(muestra)[2]
function(lambda)
{
y <- apply(muestra, 1, function(x){
for(i in 1:p)
{
x[i] <- ((x[i]**lambda[i]-1)/lambda[i])
return(x)
}
})
y <- t(y)
l <- -(n/2)*log( det( cov(y) ) )
for (i in 1:p)
{
l <- l + (lambda[i]-1)*info[i]
}
return(-l)
}
}
Multinormal.tamano_ <- multinormal.likelihood(parques[,2:3]) #inicializamos la funcion
a <- optim( fn = Multinormal.tamano_, par = c(.19, -.3), method = "CG")
a <- optim( fn = Multinormal.tamano_, par = c(.19, -.3), method = "L-BFGS-B")
a <- optim( fn = Multinormal.tamano_, par = c(.19, -.3), method = "SANN")
a
Multinormal.tamano_
Multinormal.tamano_(c(.19,-.3))
Multinormal.tamano_(c(.1,-.2))
a <- optim( fn = Multinormal.tamano_, par = c(.1, -.2), method = "SANN")
a
a <- optim( fn = Multinormal.tamano_, par = c(.1, -.2))
a
?optim
flb <- function(x)
{ p <- length(x); sum(c(1, rep(4, p-1)) * (x - c(1, x[-p])^2)^2) }
flb <- function(x)
{
p <- length(x);
sum(c(1, rep(4, p-1)) * (x - c(1, x[-p])^2)^2)
}
flb(1:2)
x <- 1:3
p <- length(x);
c(1, rep(4, p-1)) * (x - c(1, x[-p])^2)^2
mapply(FUN = flb, 1:20)
y <- mapply(FUN = flb, 1:20)
plot(1:20, y)
rep(2, 25)
optim(rep(3, 25), flb, NULL, method = "L-BFGS-B",
lower = rep(2, 25), upper = rep(4, 25)) # par[24] is *not* at boundary
a <- optim(rep(3, 25), flb, NULL, method = "L-BFGS-B",
lower = rep(2, 25), upper = rep(4, 25)) # par[24] is *not* at boundary
a
a <- optim( fn = Multinormal.tamano_, par = c(.1, -.2),method = "L-BFGS-B",
lower = c(.00001,.4), upper=c(.00000, -.4) )
a
a <- optim( fn = Multinormal.tamano_, par = c(.1, -.2),method = "L-BFGS-B",
lower = c(.00001,.4), upper=c(.000001, -.4) )
a
a <- optim( fn = Multinormal.tamano_, par = c(.1, -.2),method = "L-BFGS-B",
control(maxit =2000), lower = -.4, upper=.4)
a <- optim( fn = Multinormal.tamano_, par = c(.1, -.2),method = "L-BFGS-B",
control=list(maxit =2000), lower = -.4, upper=.4)
a
a <- optim( fn = Multinormal.tamano_, par = c(.1, -.2), method = "SANN",
control = list(maxit = 30000, temp = 2000, trace = TRUE,
REPORT = 500))
a
info <- apply(muestra, 2, sum)
info
n <- dim(muestra)[1]
p <- dim(muestra)[2]
info <- apply(muestra, 2, function(x){log(sum(x))})
info
info <- apply(muestra, 2, function(x){log(sum(x))})
n <- dim(muestra)[1]
p <- dim(muestra)[2]
multinormal.likelihood <- function(muestra,lambda)
{
info <- apply(muestra, 2, function(x){log(sum(x))})
n <- dim(muestra)[1]
p <- dim(muestra)[2]
function(lambda)
{
for (i in 1:n)
{
for(j in 1:p)
{
if(abs(lambda[j]) <=.Machine$double.eps)
{
muestra[i, j] <- log(muestra[i, j])
}
else{
muestra[i, j] <- (muestra[i, j]**lambda[j]-1)/lambda[j]
}
}
}
l <- -(n/2)*log( det( cov(muestra)))
for (i in 1:p)
{
l <- l + (lambda[i]-1)*info[i]
}
return(-l)
}
}
Multinormal.tamano_ <- multinormal.likelihood(parques[,2:3]) #inicializamos la funcion
a <- optim( fn = Multinormal.tamano_, par = c(.1, -.2))
a
parques[,2:3]
a <- optim( fn = Multinormal.tamano_, par = c(.1, -.2), method = "SANN",
control = list(maxit = 30000, temp = 2000, trace = TRUE,
REPORT = 500))
a
a <- optim( fn = Multinormal.tamano_, par = c(.1, -.2), method = "SANN",
control = list(maxit = 100000, temp = 2000, trace = TRUE,
REPORT = 100))
a
Multinormal.tamano_(c(.19,-.34))
multinormal.likelihood <- function(muestra,lambda)
{
info <- apply(muestra, 2, function(x){log(sum(x))})
n <- dim(muestra)[1]
p <- dim(muestra)[2]
function(lambda)
{
for (i in 1:n)
{
for(j in 1:p)
{
if(abs(lambda[j]) <=.Machine$double.eps)
{
muestra[i, j] <- log(muestra[i, j])
}
else{
muestra[i, j] <- (muestra[i, j]**lambda[j]-1)/lambda[j]
}
}
}
l <- -(n/2)*log( det( cov(muestra)))
for (i in 1:p)
{
l <- l + (lambda[i]-1)*info[i]
}
return(l)
}
}
Multinormal.tamano_ <- multinormal.likelihood(parques[,2:3]) #inicializamos la funcion
a <- optim( fn =function(x){
return(-1*Multinormal.tamano_(x))}, par = c(.19, -.34), method = "SANN",
control = list(maxit = 100000, temp = 2000, trace = TRUE,
REPORT = 1000))
multinormal.likelihood <- function(muestra,lambda)
{
info <- apply(muestra, 2, function(x){log(sum(x))})
n <- dim(muestra)[1]
p <- dim(muestra)[2]
function(lambda)
{
for (i in 1:n)
{
for(j in 1:p)
{
if(abs(lambda[j]) <=.Machine$double.eps)
{
muestra[i, j] <- log(muestra[i, j])
}
else{
muestra[i, j] <- (muestra[i, j]**lambda[j]-1)/lambda[j]
}
}
}
l <- -(n/2)*log( det( cov(muestra)))
for (i in 1:p)
{
l <- l + (lambda[i]-1)*info[i]
}
return(l)
}
}
Multinormal.tamano_(c(.19,-.34))
a <- optim( fn =function(x){
return(-1*Multinormal.tamano_(x))}, par = c(.19, -.34), method = "SANN",
control = list(maxit = 100000, temp = 2000, trace = TRUE,
REPORT = 1000))
multinormal.likelihood <- function(muestra,lambda)
{
info <- apply(muestra, 2, function(x){sum(log(x))})
n <- dim(muestra)[1]
p <- dim(muestra)[2]
function(lambda)
{
for (i in 1:n)
{
for(j in 1:p)
{
if(abs(lambda[j]) <=.Machine$double.eps)
{
muestra[i, j] <- log(muestra[i, j])
}
else{
muestra[i, j] <- (muestra[i, j]**lambda[j]-1)/lambda[j]
}
}
}
l <- -(n/2)*log( det( cov(muestra)))
for (i in 1:p)
{
l <- l + (lambda[i]-1)*info[i]
}
return(l)
}
}
Multinormal.tamano_ <- multinormal.likelihood(parques[,2:3]) #inicializamos la funcion
Multinormal.tamano_(c(.19,-.34))
a <- optim( fn =function(x){
return(-1*Multinormal.tamano_(x))}, par = c(.19, -.34), method = "SANN",
control = list(maxit = 100000, temp = 2000, trace = TRUE,
REPORT = 1000))
a
a <- optim( fn =function(x){
return(-1*Multinormal.tamano_(x))}, par = c(.1, -.1), method = "SANN",
control = list(maxit = 100000, temp = 2000, trace = TRUE,
REPORT = 10000))
a
a <- optim( fn =function(x){
return(-1*Multinormal.tamano_(x))}, par = c(-.000001, .0000001), method = "SANN",
control = list(maxit = 1000, temp = 2000, trace = TRUE,
REPORT = 1000))
a
a <- optim( fn =function(x){
return(-1*Multinormal.tamano_(x))}, par = c(-.000001, .0000001), method = "SANN",
control = list(maxit = 100000, temp = 2000, trace = TRUE,
REPORT = 1000))
a
nuevos <- a$par
nuevos
nuevos[1]
m <- matrix(c(2,12,8,9,6,9,8,10), byrow = TRUE, nrow = 4)
m
medias <- apply(m, 2, mean)
medias
cov(m)
var(m)
var(m)
9*8
100-72
s <- cov(m)
s
s_ <- solve(s)
det(s)
s
16*9
44/9
medias
medias%*%s_%*%medias
75/22
mu <- c(7, 11)
m <- matrix(c(2,12,8,9,6,9,8,10), byrow = TRUE, nrow = 4)
medias <- apply(m, 2, mean)
mu <- c(7, 11)
s <- cov(m)
det(s)
s_ <- solve(s)
(medias-mu)%*%s_%*%(medias-mu)
75/22
?fisher
??fisher
?qf()
qf(1-.05,2,2)
75/22
qf(1-.05,3,10)
qf(1-.1,3,10)
qf(1-.1,3,17)
qf(1-.05,2,2)
19*3
300/22
?shapiro.test()
muestra <- matrix(c(2,12,8,9,6,9,8,10), byrow = TRUE, nrow = 4)
shapiro.test(muestra[,1])
shapiro.test(muestra[,2])
shapiro.test(muestra[,1])
shapiro.test(muestra[,2])
?qf(0.05, )
qf(0.05, df1=2, df2 = 2 )
qf(1-0.05, df1=2, df2 = 2 )
3*qf(1-0.05, df1=2, df2 = 2 )
exacto <- 3*qf(1-0.05, df1=2, df2 = 2 )
38/2
38*3/30
280-36
244*3
244*3/20
244*3/20-3
24*6
24*6-100
3*244/44
3*244/44-3
44/244
(44/244)**2
-2*log((44/244)**2)
log( (44/244)**2)
log( (44/244)**2)*-2
?qchisq(1-.05, )
qchisq(1-.05,df = 2 )
8500/3
2800+5210
800/3
a <- c(0.1661, -0.7405, -0.2007, 1.3287, 0.6678 ,0.6678,
-0.1485, 0.8496, -0.0995, -0.7950, 0.2326, 0.2326,
0.3189, 0.0314, -2.6524, 2.6452 ,2.6383 ,2.6383,
0.2718, -1.7378, -0.5238, 2.0817 ,0.0437 ,0.0437,
0.2526, -1.6540, -1.0242, 2.4014 ,0.5190 ,0.5190,
0.2526, -1.6540, -1.0242, 2.4014 ,0.5190 ,0.5190)
a <- matrix(a, byrow = TRUE, ncol = 6)
b <- c(0.8384, -0.6846, 2.2869, 1.2523, 1.1416, 1.1416,
-0.6846, 2.3913, -0.9707, -3.3963, -1.9776, -1.9776,
2.2869, -0.9707, 17.4975 ,0.4213 ,0.7501 ,0.7501,
1.2523, -3.3963, 0.4213 ,6.3418 ,4.3902 ,4.3902,
1.1416, -1.9776, 0.7501 ,4.3902 ,4.1688 ,4.1688,
1.1416, -1.9776, 0.7501 ,4.3902 ,4.1688 ,4.1688)
b <- matrix(b, byrow = TRUE, ncol = 6)
c <- c(-0.5036, 0.9281, -1.2859, -1.5834, -1.1682, -1.1682,
0.3221, -0.7801, -0.8124, 2.1669, 1.2050, 1.2050,
-0.2185, 2.8579, -2.9601, -3.5656, -3.9186, -3.9186,
-0.3364, 1.3301, 1.8211, -2.7533, -0.7221, -0.7221,
-0.4131, 0.9941, 1.2832, -2.1597, -0.9175, -0.9175,
-0.4131, 0.9941, 1.2832 ,-2.1597 ,-0.9175, -0.9175)
c <- matrix(c, byrow = TRUE, ncol = 6)
d <- c(-0.4637, 0.9239, -1.1799, -1.5260, -1.0623, -1.0623,
0.4139, -0.7067, -0.2614, 2.3138, 1.4988, 1.4988,
-0.3556, 3.1645, -2.2459, -3.7115, -4.1062, -4.1062,
-0.6598, 1.2885, 0.6825, -3.2324, -1.6260, -1.6260,
-0.5848, 0.9654, 0.6540 ,-2.4152 ,-1.4014, -1.4014,
-0.5848, 0.9654, 0.6540 ,-2.4152 ,-1.4014, -1.4014)
d <- matrix(d, byrow = TRUE, ncol = 6)
e <- c(-0.5036, 0.3221, -0.2185, -0.3364, -0.4131, -0.4131,
0.9281, -0.7801, 2.8579, 1.3301, 0.9941, 0.9941,
-1.2859, -0.8124, -2.9601, 1.8211, 1.2832, 1.2832,
-1.5834, 2.1669, -3.5656, -2.7533, -2.1597, -2.1597,
-1.1682, 1.2050, -3.9186, -0.7221, -0.9175, -0.9175,
-1.1682, 1.2050, -3.9186, -0.7221, -0.9175, -0.9175)
e <- matrix(e, byrow = TRUE, ncol = 6)
f <- c(0.7187, -0.6899, 1.9023, 1.0767, 0.8129 ,0.8129,
-0.6899, 2.4594, -0.7354, -3.3921, -1.9510 ,-1.9510,
1.9023, -0.7354, 17.1940, -0.0982, -0.1533, -0.1533,
1.0767, -3.3921, -0.0982, 6.0862, 3.9154 ,3.9154,
0.8129, -1.9510, -0.1533, 3.9154, 3.2915 ,3.2915,
0.8129, -1.9510, -0.1533, 3.9154, 3.2915 ,3.2915)
f <- matrix(f, byrow = TRUE, ncol = 6)
H <- cbind(-B, -C)
H <- cbind(-b, -c)
H1 <- cbind(-b, -c)
h2 <- cbind(-e, -f)
H2 <- cbind(-e, -f)
H <- rbind(H1, H2)
J <- rbind(-a, -d)
det(H)
svd <- svd(H)
str(svd)
svd
?svd
str(svd)
H - svd$u%*%diag(svd$d)%*%t(svd$v)
round(H - svd$u%*%diag(svd$d)%*%t(svd$v),1)
svd$d
X <- svd$v%*%diag(1/svd$d)%*%svd$u%*%J
X <- svd$v%*%diag(1/svd$d)%*%t(svd$u)%*%J
t(svd$u)%*%J
diag(1/svd$d)%*%t(svd$u)%*%J
svd$d
View(H)
H[12, ] <-
rnorm(12, mean(H[12, ]), sd(H[12, ]) )
H[12, ] <-
rnorm(12, mean(H[12, ]), sd(H[12, ]) )
rnorm(12, mean(H[12, ]), sd(H[12, ]) )
H[12, ] <-
rnorm(12, mean(H[12, ]), sd(H[12, ]) )/max(H)
rnorm(12, mean(H[12, ]), sd(H[12, ]) )/max(H)
H1 <- cbind(-b, -c)
H2 <- cbind(-e, -f)
H <- rbind(H1, H2)
H[12, ] <- H[12, ] <- rnorm(12, mean(H[12, ]), sd(H[12, ]) )/(10*max(H))
H[6, ] <- H[6, ] <- rnorm(12, mean(H[6, ]), sd(H[6, ]) )/(10*max(H))
J <- rbind(-a, -d)
svd <- svd(H)
svd$d
svd <- svd(H)
X <- svd$v%*%diag(1/svd$d)%*%t(svd$u)%*%J
round(X, 4)
det(X)
X <- svd$v%*%diag(1/svd$d)%*%t(svd$u)%*%J
