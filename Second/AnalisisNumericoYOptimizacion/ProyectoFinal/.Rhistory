W <- ( sqrtm(solve(S22)) %*% S21 %*% solve(S11) %*% S12%*%sqrtm(solve(S22))  )
#me voy por la segura sacar los valores propios más grandes
W <- ( sqrtm(solve(S22)) %*% t(S21) %*% solve(S11) %*% S12%*%sqrtm(solve(S22))  )
#me voy por la segura sacar los valores propios más grandes
W <- ( sqrtm(solve(S22)) %*% t(S12) %*% solve(S11) %*% S12%*%sqrtm(solve(S22))  )
prop <- eigen(W)
valores <- prop$values
valores
var_expl <- sum(prop$values[1])/sum(prop$values) #cuantos se requeirem ]??????
var_expl
vectores.propios <- prop$vectors
vectores.propios
.545718**.5
S11 <- matrix( c(1, .505, .505, 1), byrow = TRUE, ncol = p  )
S12 <- matrix( c(.569, 0.602, 0.422, 0.467), byrow = TRUE, ncol = q  )
p <- 2
q <- 2
library(expm)
S11 <- matrix( c(1, .505, .505, 1), byrow = TRUE, ncol = p  )
S12 <- matrix( c(.569, 0.602, 0.422, 0.467), byrow = TRUE, ncol = q  )
S11
S12 <- matrix( c(.569, 0.602, 0.422, 0.467), byrow = TRUE, ncol = q  )
S12
(S11 <- matrix( c(1, .505, .505, 1), byrow = TRUE, ncol = p  ))
(S12 <- matrix( c(.569, 0.602, 0.422, 0.467), byrow = TRUE, ncol = q  ))
(S22 <- matrix( c(1,.2,.2,1 ), byrow = TRUE, ncol = q  ))
(S22 <- matrix( c(1,.926,.926,1 ), byrow = TRUE, ncol = q  ))
#me voy por la segura sacar los valores propios más grandes
W <- ( sqrtm(solve(S22)) %*% t(S12) %*% solve(S11) %*% S12%*%sqrtm(solve(S22))  )
prop <- eigen(W)
valores <- prop$values
var_expl <- sum(prop$values[1])/sum(prop$values) #cuantos se requeirem ]??????
vectores.propios <- prop$vectors
f <- vectores.propios
f
(S12 <- matrix( c(.569, 0.602, 0.422, 0.467), byrow = TRUE, ncol = q  ))
e <- t(f) %*% S11 %*% f
e
apply(f, 2, function(x) sum(x**2))
e <- t(f) %*% S11 %*% f
apply(e, 2, function(x) sum(x**2))
normas.e <- apply(e, 2, function(x) sum(x**2))
diag(normas.e)
rep(normas.e, each = p)
matrix( rep(normas.e, each = p), byrow = TRUE)
matrix( rep(normas.e, each = p), byrow = TRUE, ncol = p)
e <- e%*% matrix( rep(normas.e, each = p), byrow = TRUE, ncol = p)
apply(e, 2, function(x) sum(x**2))
(S11 <- matrix( c(1, .505, .505, 1), byrow = TRUE, ncol = p  ))
(S12 <- matrix( c(.569, 0.602, 0.422, 0.467), byrow = TRUE, ncol = q  ))
(S22 <- matrix( c(1,.926,.926,1 ), byrow = TRUE, ncol = q  ))
#me voy por la segura sacar los valores propios más grandes
W <- ( sqrtm(solve(S22)) %*% t(S12) %*% solve(S11) %*% S12%*%sqrtm(solve(S22))  )
prop <- eigen(W)
valores <- prop$values
var_expl <- sum(prop$values[1])/sum(prop$values) #cuantos se requeirem ]??????
vectores.propios <- prop$vectors
f <- vectores.propios
apply(f, 2, function(x) sum(x**2))
e <- t(f) %*% S11 %*% f
p <- 2
q <- 2
library(expm)
(S11 <- matrix( c(1, .505, .505, 1), byrow = TRUE, ncol = p  ))
(S12 <- matrix( c(.569, 0.602, 0.422, 0.467), byrow = TRUE, ncol = q  ))
(S22 <- matrix( c(1,.926,.926,1 ), byrow = TRUE, ncol = q  ))
#me voy por la segura sacar los valores propios más grandes
W <- ( sqrtm(solve(S22)) %*% t(S12) %*% solve(S11) %*% S12%*%sqrtm(solve(S22))  )
prop <- eigen(W)
valores <- prop$values
var_expl <- sum(prop$values[1])/sum(prop$values) #cuantos se requeirem ]??????
vectores.propios <- prop$vectors
f <- vectores.propios
apply(f, 2, function(x) sum(x**2))
e <- t(f) %*% S11 %*% f
(normas.e <- apply(e, 2, function(x) sum(x**2)))
e <- e%*% matrix( rep(1/normas.e, each = p), byrow = TRUE, ncol = p)
apply(e, 2, function(x) sum(x**2))
p <- 2
q <- 2
library(expm)
(S11 <- matrix( c(1, .505, .505, 1), byrow = TRUE, ncol = p  ))
(S12 <- matrix( c(.569, 0.602, 0.422, 0.467), byrow = TRUE, ncol = q  ))
(S22 <- matrix( c(1,.926,.926,1 ), byrow = TRUE, ncol = q  ))
#me voy por la segura sacar los valores propios más grandes
W <- ( sqrtm(solve(S22)) %*% t(S12) %*% solve(S11) %*% S12%*%sqrtm(solve(S22))  )
prop <- eigen(W)
valores <- prop$values
var_expl <- sum(prop$values[1])/sum(prop$values) #cuantos se requeirem ]??????
vectores.propios <- prop$vectors
f <- vectores.propios
apply(f, 2, function(x) sum(x**2))
e <- t(f) %*% S11 %*% f
(normas.e <- apply(e, 2, function(x) sum(x**2)))
(S11 <- matrix( c(1, .505, .505, 1), byrow = TRUE, ncol = p  ))
(S12 <- matrix( c(.569, 0.602, 0.422, 0.467), byrow = TRUE, ncol = q  ))
(S22 <- matrix( c(1,.926,.926,1 ), byrow = TRUE, ncol = q  ))
#me voy por la segura sacar los valores propios más grandes
W <- ( sqrtm(solve(S22)) %*% t(S12) %*% solve(S11) %*% S12%*%sqrtm(solve(S22))  )
prop <- eigen(W)
valores <- prop$values
var_expl <- sum(prop$values[1])/sum(prop$values) #cuantos se requeirem ]??????
vectores.propios <- prop$vectors
f <- vectores.propios
apply(f, 2, function(x) sum(x**2))
e <- t(f) %*% S11 %*% f
(normas.e <- apply(e, 2, function(x) sum(x**2)))
matrix( rep(1/(normas.e**.5), each = p), byrow = TRUE, ncol = p)
e
matrix( rep(1/(normas.e**.5), each = p), byrow = FALSE, ncol = p)
e <- e%*% matrix( rep(1/(normas.e**.5), each = p), byrow = TRUE, ncol = p)
e
p <- 2
q <- 2
library(expm)
(S11 <- matrix( c(1, .505, .505, 1), byrow = TRUE, ncol = p  ))
(S12 <- matrix( c(.569, 0.602, 0.422, 0.467), byrow = TRUE, ncol = q  ))
(S22 <- matrix( c(1,.926,.926,1 ), byrow = TRUE, ncol = q  ))
#me voy por la segura sacar los valores propios más grandes
W <- ( sqrtm(solve(S22)) %*% t(S12) %*% solve(S11) %*% S12%*%sqrtm(solve(S22))  )
prop <- eigen(W)
valores <- prop$values
var_expl <- sum(prop$values[1])/sum(prop$values) #cuantos se requeirem ]??????
vectores.propios <- prop$vectors
f <- vectores.propios
apply(f, 2, function(x) sum(x**2))
(e <- (t(f) %*% S11 %*% f))
(normas.e <- apply(e, 2, function(x) sum(x**2)))
e
matrix( rep(1/(normas.e**.5), each = p), byrow = TRUE, ncol = p)
apply(f, 2, function(x) sqrt(sum(x**2)))
(e <- (t(f) %*% S11 %*% f))
(normas.e <- apply(e, 2, function(x) sum(x**2)))
matrix( rep(1/(normas.e), each = p), byrow = TRUE, ncol = p)
e
(normas.e <- apply(e, 2, function(x) sum(x**2)))
(e %*% matrix( rep(1/(normas.e), each = p), byrow = FALSE, ncol = p))
e <- (e %*% matrix( rep(1/(normas.e), each = p), byrow = FALSE, ncol = p))
(normas.e <- apply(e, 2, function(x) sum(x**2)))
(S11 <- matrix( c(1, .505, .505, 1), byrow = TRUE, ncol = p  ))
(S12 <- matrix( c(.569, 0.602, 0.422, 0.467), byrow = TRUE, ncol = q  ))
(S22 <- matrix( c(1,.926,.926,1 ), byrow = TRUE, ncol = q  ))
#me voy por la segura sacar los valores propios más grandes
W <- ( sqrtm(solve(S22)) %*% t(S12) %*% solve(S11) %*% S12%*%sqrtm(solve(S22))  )
prop <- eigen(W)
valores <- prop$values
var_expl <- sum(prop$values[1])/sum(prop$values) #cuantos se requeirem ]??????
vectores.propios <- prop$vectors
f <- vectores.propios
apply(f, 2, function(x) sqrt(sum(x**2)))
(e <- (t(f) %*% S11 %*% f))
(normas.e <- apply(e, 2, function(x) sqrt(sum(x**2))))
e
matrix( rep(1/(normas.e), each = p), byrow = FALSE, ncol = p)
e
matrix( rep(1/(normas.e), each = p), byrow = TRUE, ncol = p)
e <- (e %*% matrix( rep(1/(normas.e), each = p), byrow = TRUE, ncol = p))
(normas.e <- apply(e, 2, function(x) sqrt(sum(x**2))))
apply(f, 2, function(x) sqrt(sum(x**2)))
(e <- (t(f) %*% S11 %*% f))
(normas.e <- apply(e, 2, function(x) sqrt(sum(x**2))))
matrix( rep(1/(normas.e) p), byrow = TRUE, ncol = p)
(normas.e <- apply(e, 2, function(x) sqrt(sum(x**2))))
matrix( rep(1/(normas.e), p), byrow = TRUE, ncol = p)
diag( rep(1/(normas.e)))
e <- (e %*% diag( rep(1/(normas.e))) )
(normas.e <- apply(e, 2, function(x) sqrt(sum(x**2))))
e
(S11 <- matrix( c(1,.4,.4,1), byrow = TRUE, ncol = p  ))
p <- 2
q <- 2
library(expm)
(S11 <- matrix( c(1,.4,.4,1), byrow = TRUE, ncol = p  ))
(S12 <- matrix( c(.5, 0.6, 0.3, 0.4), byrow = TRUE, ncol = q  ))
(S22 <- matrix( c(1, .2, .2, 1 ), byrow = TRUE, ncol = q  ))
#me voy por la segura sacar los valores propios más grandes
W <- ( sqrtm(solve(S22)) %*% t(S12) %*% solve(S11) %*% S12%*%sqrtm(solve(S22))  )
prop <- eigen(W)
valores <- prop$values
var_expl <- sum(prop$values[1])/sum(prop$values) #cuantos se requeirem ]??????
vectores.propios <- prop$vectors
f <- vectores.propios
(f <- vectores.propios)
apply(f, 2, function(x) sqrt(sum(x**2)))
(e <- (t(f) %*% S11 %*% f))
(normas.e <- apply(e, 2, function(x) sqrt(sum(x**2))))
e <- (e %*% diag( rep(1/(normas.e))) )
e
p <- 2
q <- 2
library(expm)
(S11 <- matrix( c(1,.4,.4,1), byrow = TRUE, ncol = p  ))
(S12 <- matrix( c(.5, 0.6, 0.3, 0.4), byrow = TRUE, ncol = q  ))
(S22 <- matrix( c(1, .2, .2, 1 ), byrow = TRUE, ncol = q  ))
#me voy por la segura sacar los valores propios más grandes
W <- ( sqrtm(solve(S22)) %*% t(S12) %*% solve(S11) %*% S12%*%sqrtm(solve(S22))  )
prop <- eigen(W)
valores <- prop$values
var_expl <- sum(prop$values[1])/sum(prop$values) #cuantos se requeirem ]??????
vectores.propios <- prop$vectors
(f <- sqrtm(solve(S11))%*%vectores.propios)
(vectores.propios <- prop$vectors)
p <- 2
q <- 2
library(expm)
(S11 <- matrix( c(1,.4,.4,1), byrow = TRUE, ncol = p  ))
(S12 <- matrix( c(.5, 0.6, 0.3, 0.4), byrow = TRUE, ncol = q  ))
(S22 <- matrix( c(1, .2, .2, 1 ), byrow = TRUE, ncol = q  ))
#me voy por la segura sacar los valores propios más grandes
W <- ( sqrtm(solve(S22)) %*% t(S12) %*% solve(S11) %*% S12%*%sqrtm(solve(S22))  )
prop <- eigen(W)
valores <- prop$values
valores
var_expl <- sum(prop$values[1])/sum(prop$values) #cuantos se requeirem ]??????
var_expl
i <- 1
var_expl <- sum(prop$values[i])/sum(prop$values) #cuantos se requeirem -> i
var_expl #var acumulada de las variables canonicas
(vectores.propios <- prop$vectors)
#me voy por la segura sacar los valores propios más grandes
W <- ( sqrtm(solve(S22)) %*% t(S12) %*% solve(S11) %*% S12%*%sqrtm(solve(S22))  )
prop <- eigen(W)
valores <- prop$values
valores
i <- 1
var_expl <- sum(prop$values[i])/sum(prop$values) #cuantos se requeirem -> i
var_expl #var acumulada de las variables canonicas
(vectores.propios <- prop$vectors)
(f <- sqrtm(solve(S11))%*%vectores.propios)
(vectores.propios <- prop$vectors)
(vectores.propios <- prop$vectors)
(f <- vectores.propios %*% sqrtm(solve(S11)))
(V <- vectores.propios %*% sqrtm(solve(S12)))
apply(V, 2, function(x) sqrt(sum(x**2)))
normas.f <- apply(V, 2, function(x) sqrt(sum(x**2)))
V
(V <- V %*% diag( rep(1/(normas.f))) )
apply(V, 2, function(x) sqrt(sum(x**2)))
p <- 2
q <- 2
library(expm)
(S11 <- matrix( c(1,.4,.4,1), byrow = TRUE, ncol = p  ))
(S12 <- matrix( c(.5, 0.6, 0.3, 0.4), byrow = TRUE, ncol = q  ))
(S22 <- matrix( c(1, .2, .2, 1 ), byrow = TRUE, ncol = q  ))
#me voy por la segura sacar los valores propios más grandes
W <- ( sqrtm(solve(S22)) %*% t(S12) %*% solve(S11) %*% S12%*%sqrtm(solve(S22))  )
prop <- eigen(W)
valores <- prop$values
valores
i <- 1
var_expl <- sum(prop$values[i])/sum(prop$values) #cuantos se requeirem -> i
var_expl #var acumulada de las variables canonicas
(vectores.propios <- prop$vectors)
(V <- t(vectores.propios) %*% sqrtm(solve(S22)))
normas.f <- apply(V, 2, function(x) sqrt(sum(x**2)))
normas.f
(V <- V %*% diag( rep(1/(normas.f))) )
(vectores.propios <- prop$vectors)
(V <- ( sqrtm(solve(S22))%*% (vectores.propios) ))
normas.f <- apply(V, 2, function(x) sqrt(sum(x**2)))
normas.f
(V <- V %*% diag( rep(1/(normas.f))) )
(vectores.propios <- prop$vectors) #los f_i
(V <- ( sqrtm(solve(S22))%*% (vectores.propios) ))
normas.f <- apply(V, 2, function(x) sqrt(sum(x**2)))
(V <- V %*% diag( rep(1/(normas.f))) )
(V <- ( sqrtm(solve(S22))%*% (vectores.propios) ))
(V <- ( sqrtm(solve(S22))%*% (vectores.propios) ))
(V <- ( sqrtm(solve(S22))%*% (vectores.propios) ))
q <- 2
library(expm)
p <- 2
q <- 2
library(expm)
(S11 <- matrix( c(1,.4,.4,1), byrow = TRUE, ncol = p  ))
(S12 <- matrix( c(.5, 0.6, 0.3, 0.4), byrow = TRUE, ncol = q  ))
(S22 <- matrix( c(1, .2, .2, 1 ), byrow = TRUE, ncol = q  ))
#me voy por la segura sacar los valores propios más grandes
W <- ( sqrtm(solve(S22)) %*% t(S12) %*% solve(S11) %*% S12%*%sqrtm(solve(S22))  )
prop <- eigen(W)
valores <- prop$values
valores
i <- 1
var_expl <- sum(prop$values[i])/sum(prop$values) #cuantos se requeirem -> i
var_expl #var acumulada de las variables canonicas
(f <- prop$vectors) #los f_i
(V <- ( sqrtm(solve(S22))%*% (f) ))
(e <- (  sqrtm(S11) %*% solve(t(S12)) %*% sqrm(S22) %*% f))
(e <- (  sqrtm(S11) %*% solve(t(S12)) %*% sqrtm(S22) %*% f))
(normas.e <- apply(e, 2, function(x) sqrt(sum(x**2))))
e <- (e %*% diag( rep(1/(normas.e))) )
e
diag( rep(1/(normas.e)))
(V <- ( sqrtm(solve(S22))%*% (f) ))
(e <- (  sqrtm(S11) %*% solve(t(S12)) %*% sqrtm(S22) %*% f))
(normas.e <- apply(e, 2, function(x) sqrt(sum(x**2))))
e
diag( rep(1/(normas.e)
)
)
)
(f <- prop$vectors) #los f_i
(V <- ( sqrtm(solve(S22))%*% (f) ))
(e <- (  sqrtm(S11) %*% solve(t(S12)) %*% sqrtm(S22) %*% f))
(normas.e <- apply(e, 2, function(x) sqrt(sum(x**2))))
(e <- (e %*% diag( rep(1/(normas.e))) ))
apply(e, 2, function(x) sqrt(sum(x**2)))
e
(U <- sqrtm(solve(S11)) %*%e )
(normas.u <- apply(U, 2, function(x) sqrt(sum(x**2))))
(1/(normas.u)
)
(U <- (U %*% diag( rep(1/(normas.u))) ))
apply(U, 2, function(x) sqrt(sum(x**2)))
p <- 2
q <- 2
library(expm)
(S11 <- matrix( c(1,.4,.4,1), byrow = TRUE, ncol = p  ))
(S12 <- matrix( c(.5, 0.6, 0.3, 0.4), byrow = TRUE, ncol = q  ))
(S22 <- matrix( c(1, .2, .2, 1 ), byrow = TRUE, ncol = q  ))
#me voy por la segura sacar los valores propios más grandes
W <- ( sqrtm(solve(S22)) %*% t(S12) %*% solve(S11) %*% S12%*%sqrtm(solve(S22))  )
prop <- eigen(W)
valores <- prop$values
valores
i <- 1
var_expl <- sum(prop$values[i])/sum(prop$values) #cuantos se requeirem -> i
var_expl #var acumulada de las variables canonicas
(f <- prop$vectors) #los f_i
(V <- ( sqrtm(solve(S22))%*% (f) ))
(e <- (  sqrtm(S11) %*% solve(t(S12)) %*% sqrtm(S22) %*% f))
(normas.e <- apply(e, 2, function(x) sqrt(sum(x**2))))
(e <- (e %*% diag( rep(1/(normas.e))) ))
(U <- sqrtm(solve(S11)) %*%e )
(normas.u <- apply(U, 2, function(x) sqrt(sum(x**2))))
(U <- (U %*% diag( rep(1/(normas.u))) ))
p <- 2
q <- 2
library(expm)
(S11 <- matrix( c(1,.4,.4,1), byrow = TRUE, ncol = p  ))
(S12 <- matrix( c(.5, 0.6, 0.3, 0.4), byrow = TRUE, ncol = q  ))
(S22 <- matrix( c(1, .2, .2, 1 ), byrow = TRUE, ncol = q  ))
#me voy por la segura sacar los valores propios más grandes
W <- ( sqrtm(solve(S22)) %*% t(S12) %*% solve(S11) %*% S12%*%sqrtm(solve(S22))  )
prop <- eigen(W)
valores <- prop$values
valores
i <- 1
var_expl <- sum(prop$values[i])/sum(prop$values) #cuantos se requeirem -> i
var_expl #var acumulada de las variables canonicas
(f <- prop$vectors) #los f_i
(V <- ( sqrtm(solve(S22))%*% (f) ))
(e <- (  sqrtm(S11) %*% solve(t(S12)) %*% sqrtm(S22) %*% f))
(normas.e <- apply(e, 2, function(x) sqrt(sum(x**2))))
(e <- (e %*% diag( rep(1/(normas.e))) ))
(U <- sqrtm(solve(S11)) %*%e )
p <- 2
q <- 2
library(expm)
(S11 <- matrix( c(1,.4,.4,1), byrow = TRUE, ncol = p  ))
(S12 <- matrix( c(.5, 0.6, 0.3, 0.4), byrow = TRUE, ncol = q  ))
(S22 <- matrix( c(1, .2, .2, 1 ), byrow = TRUE, ncol = q  ))
#me voy por la segura sacar los valores propios más grandes
W <- ( sqrtm(solve(S22)) %*% t(S12) %*% solve(S11) %*% S12%*%sqrtm(solve(S22))  )
prop <- eigen(W)
valores <- prop$values
valores
i <- 1
var_expl <- sum(prop$values[i])/sum(prop$values) #cuantos se requeirem -> i
var_expl #var acumulada de las variables canonicas
(f <- prop$vectors) #los f_i
(V <- ( sqrtm(solve(S22))%*% (f) ))
(e <- (  sqrtm(S11) %*% solve(t(S12)) %*% sqrtm(S22) %*% f))
U <- sqrtm(solve(S11)) %*%e
(normas.u <- apply(U, 2, function(x) sqrt(sum(x**2))))
(U <- (U %*% diag( rep(1/(normas.U))) ))
(U <- (U %*% diag( rep(1/(normas.u))) ))
p <- 2
q <- 2
library(expm)
(S11 <- matrix( c(1,.4,.4,1), byrow = TRUE, ncol = p  ))
(S12 <- matrix( c(.5, 0.6, 0.3, 0.4), byrow = TRUE, ncol = q  ))
(S22 <- matrix( c(1, .2, .2, 1 ), byrow = TRUE, ncol = q  ))
#me voy por la segura sacar los valores propios más grandes
W <- ( sqrtm(solve(S22)) %*% t(S12) %*% solve(S11) %*% S12%*%sqrtm(solve(S22))  )
prop <- eigen(W)
valores <- prop$values
valores
i <- 1
var_expl <- sum(prop$values[i])/sum(prop$values) #cuantos se requeirem -> i
var_expl #var acumulada de las variables canonicas
(f <- prop$vectors) #los f_i
(V <- ( sqrtm(solve(S22))%*% (f) ))
(e <- (  sqrtm(S11) %*% solve(t(S12)) %*% sqrtm(S22) %*% f))
(normas.e <- apply(e, 2, function(x) sqrt(sum(x**2))))
(e <- (e %*% diag( rep(1/(normas.e))) ))
(U <- sqrtm(solve(S11)) %*%e )
V
.545718**.5
.0009089**.5
valores**.5
valores
########################################
###### Correlaciones de los pares canonicos con el primer conjunto de variables
# NOTAR EL TRASPUESTO
t(U)%*% S11
t(V)%*% S11
t(V)%*% S22
########### correlaciones del primer componente de los pares con el perimer grupo
t(u)%*%S12
########### correlaciones del primer componente de los pares con el perimer grupo
t(U)%*%S12
#########correlciones de la segunda componente canonica con el segundo grupo de variables
t(V)%*%t(S12)
setwd('C:\\Users\\fou-f\\Desktop\\MCE\\Second\\AnalisisNumericoYOptimizacion\\ProyectoFinal')
library(Rcpp) #libreria para codigo c++
library(RcppEigen) #libreria para codigo c++
library(RSpectra) #libreria para lanczos
library(imager) #libreria para leer imagenes
library(rtiff)
library(abind)
sourceCpp('W1.cpp') #compilamos el programa en C++
t1 <- Sys.time() #medimos tiempo de ejecucion
dir()
#imagen <- image_read(path = '001.tif'  )
imagen <- readTiff('001.tif', page = 0, reduce = 0, pixmap = FALSE)
image <- lapply(imagen, FUN = function(x) return(t(x)))
image <- abind(image, along = 3)
image <- as.cimg(image)
#plot(image)
#display(image)
t1 <- t1 -Sys.time()
dim(image)
200*60
200*60/1000
#plot(image)
#display(image)
t1 <- t1 -Sys.time()
dim(image)
gray.imagen <- resize(im = gray.imagen, size_x = 2239/2, size_y = 1500, size_z = 1, size_c = 1 )
setwd('C:\\Users\\fou-f\\Desktop\\MCE\\Second\\AnalisisNumericoYOptimizacion\\ProyectoFinal')
library(Rcpp) #libreria para codigo c++
library(RcppEigen) #libreria para codigo c++
library(RSpectra) #libreria para lanczos
library(imager) #libreria para leer imagenes
library(rtiff)
library(abind)
sourceCpp('W1.cpp') #compilamos el programa en C++
t1 <- Sys.time() #medimos tiempo de ejecucion
dir()
#imagen <- image_read(path = '001.tif'  )
imagen <- readTiff('001.tif', page = 0, reduce = 0, pixmap = FALSE)
image <- lapply(imagen, FUN = function(x) return(t(x)))
image <- abind(image, along = 3)
image <- as.cimg(image)
#plot(image)
#display(image)
t1 <- t1 -Sys.time()
dim(image)
#############preprosesamiento  160*120 jala bien, recortamos la imaagen para que quepa en memoria
gray.imagen <- grayscale(image) #cambiamos a escala de grises
gray.imagen <- resize(im = gray.imagen, size_x = 2239/2, size_y = 1500, size_z = 1, size_c = 1 )
plot(gray.imagen)
dim(gray.imagen) #verificamos tamanio de la imagen
remove(imagen) #removemos del ambiente la imagen original para ahorra memoria
gc()
#estandarizacion escala de grises
M <- as.matrix(gray.imagen)
M <- (M -min(M))/(max(M)-min(M))
sig <- 1
siz <- 2*round(3*sig) + 1
(h <- dim(M)[2])
(w <- dim(M)[1] )
#############preprosesamiento  160*120 jala bien, recortamos la imaagen para que quepa en memoria
gray.imagen <- grayscale(image) #cambiamos a escala de grises
gray.imagen <- resize(im = gray.imagen, size_y=1500 , size_y = 2239/2, size_z = 1, size_c = 1 )
plot(gray.imagen)
gray.imagen <- resize(im = gray.imagen, size_y=1500 , size_x = 2239/2, size_z = 1, size_c = 1 )
#############preprosesamiento  160*120 jala bien, recortamos la imaagen para que quepa en memoria
gray.imagen <- grayscale(image) #cambiamos a escala de grises
gray.imagen <- resize(im = gray.imagen, size_y=1500 , size_x = 2239/2, size_z = 1, size_c = 1 )
plot(gray.imagen)
#############preprosesamiento  160*120 jala bien, recortamos la imaagen para que quepa en memoria
gray.imagen <- grayscale(image) #cambiamos a escala de grises
gray.imagen <- resize(im = gray.imagen, size_x=1500 , size_y = 2239/2, size_z = 1, size_c = 1 )
plot(gray.imagen)
dim(gray.imagen) #verificamos tamanio de la imagen
remove(imagen) #removemos del ambiente la imagen original para ahorra memoria
gc()
#estandarizacion escala de grises
M <- as.matrix(gray.imagen)
M <- (M -min(M))/(max(M)-min(M))
sig <- 1
siz <- 2*round(3*sig) + 1
(h <- dim(M)[2])
(w <- dim(M)[1] )
vecinos <- .001
edges <- ((h*w)*(h*w-1))*vecinos #segun el paper se pueden remover hasta el 90% de las aristas deberia de ser ((h*w)*(h*w+1)/2)*.1
edges.sugerido <- edges/(h*w) #promedio de aristas por nodo
cuadrado <- edges.sugerido**.5 # vamos a fijar esta cantidad
cuadrado <- round(cuadrado) +1
sigJ <- 0.05 #ver paper
sigd <- 10#ver paper
r2 <- cuadrado**2
dim(M)
plot(as.cimg(M))
t.w <- Sys.time()
W <- Kernel_float( M, h, w, r2, sigJ, sigd)
print('tick1')
t.w <- Sys.time()- t.w
t.w
?eigs_sym
